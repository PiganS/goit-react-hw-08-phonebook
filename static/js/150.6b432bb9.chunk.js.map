{"version":3,"file":"static/js/150.6b432bb9.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/App.styled.jsx","pages/Contscts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 280px;\n  border: none;\n  border-radius: 5px;\n  padding: 5px 10px;\n  font-family: 'Arial', sans-serif;\n  margin: 10px auto;\n  background: #e9e3e3;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  margin: auto;\n`;\n\nexport const Button = styled.button`\n  padding: 8px;\n  border-radius: 5px;\n  border: none;\n  margin-top: 10px;\n\n  background-color: #ffffff;\n  text-transform: uppercase;\n  font-weight: bold;\n\n  &:hover {\n    background: -webkit-linear-gradient(to bottom, #434343, #000000);\n    background: linear-gradient(to bottom, #434343, #000000);\n    color: white;\n    box-shadow: 0px 0px 5px 2px rgba(255, 255, 255, 0.75);\n    -webkit-box-shadow: 0px 0px 5px 2px rgba(255, 255, 255, 0.75);\n    -moz-box-shadow: 0px 0px 5px 2px rgba(255, 255, 255, 0.75);\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectorContacts = state => state.contactsStore.contacts;\nexport const selectorFilter = state => state.contactsStore.filter;\nexport const selectorLoading = state => state.contactsStore.isLoading;\nexport const selectorError = state => state.contactsStore.error;\n\nexport const selectShowContacts = createSelector(\n  [selectorContacts, selectorFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { nanoid } from 'nanoid';\nimport { Button, Form, Input } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectorContacts } from 'redux/contacts/selectors';\nimport { addNewContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectorContacts);\n\n  const addsNewContact = newContact => {\n    const hasDuplicates = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (hasDuplicates) {\n      toast.error(`${newContact.name} is already in contacts!`);\n      return;\n    }\n\n    dispatch(addNewContact(newContact))\n      .unwrap()\n      .then(() =>\n        toast.info(\n          `${newContact.name} - has been successfully added to your contacts`\n        )\n      )\n      .catch(err => {\n        toast.error(err);\n      });\n  };\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    addsNewContact(newContact);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+([' \\-][a-zA-Zа-яА-Я]+)*$\"\n          required\n        />\n      </label>\n\n      <label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"^\\+?\\d{1,4}[ .\\-]?\\(?\\d{1,3}\\)?[ .\\-]?\\d{1,4}[ .\\-]?\\d{1,4}[ .\\-]?\\d{1,9}$\"\n          required\n        />\n      </label>\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Contact = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px;\n  background: #6966668d;\n  margin-top: 5px;\n`;\n\nexport const ContactText = styled.p`\n  overflow: hidden;\n`;\n\nexport const ButtonDel = styled.button`\n  border-radius: 5px;\n  border: none;\n\n  background-color: #e49797;\n  font-weight: bold;\n\n  &:hover {\n    background: #911313;\n    /* background: -webkit-linear-gradient(to bottom, #434343, #000000);\n    background: linear-gradient(to bottom, #434343, #000000); */\n    color: white;\n    box-shadow: 0px 0px 5px 2px rgba(255, 255, 255, 0.75);\n    -webkit-box-shadow: 0px 0px 5px 2px rgba(255, 255, 255, 0.75);\n    -moz-box-shadow: 0px 0px 5px 2px rgba(255, 255, 255, 0.75);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ButtonDel, Contact, ContactText } from './ContactList.styled';\n\nimport { selectShowContacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectShowContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n      .unwrap()\n      .then()\n      .catch(err => {\n        toast.error(err);\n      });\n  }, [dispatch]);\n\n  const handleDeleteProduct = id => {\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(toast.info(`contact successfully deleted`))\n      .catch(err => {\n        toast.error(err);\n      });\n  };\n\n  return (\n    <ul>\n      {filteredContacts.map(contact => (\n        <Contact key={contact.id}>\n          <ContactText>\n            {contact.name}\n            <br />\n            {contact.number}\n          </ContactText>\n          <ButtonDel\n            onClick={() => handleDeleteProduct(contact.id)}\n            type=\"button\"\n          >\n            Delete\n          </ButtonDel>\n        </Contact>\n      ))}\n    </ul>\n  );\n};\n","import { Input } from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contacts.reducer';\nimport { selectorFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectorFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const value = e.currentTarget.value;\n\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <div>\n      <label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter contact name\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 15px;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.styled';\n\nexport const Loader = () => (\n  <StyledLoader>\n    <RotatingLines\n      strokeColor=\"red\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"30\"\n      visible={true}\n    />\n  </StyledLoader>\n);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 300px;\n  border-radius: 10px;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n  margin: 20px auto;\n\n  background: linear-gradient(to bottom, #434343, #8885856a);\n\n  box-shadow: 10px 10px 31px -3px rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 10px 10px 31px -3px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 10px 10px 31px -3px rgba(0, 0, 0, 0.75);\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 15px;\n  background: -webkit-linear-gradient(to bottom, #434343, #000000);\n  background: linear-gradient(to bottom, #434343, #000000);\n  box-shadow: 0px 10px 12px -7px rgba(255, 255, 255, 0.75);\n  -webkit-box-shadow: 0px 10px 12px -7px rgba(255, 255, 255, 0.75);\n  -moz-box-shadow: 0px 10px 12px -7px rgba(255, 255, 255, 0.75);\n`;\n\nexport const Subtitle = styled.h1`\n  text-align: center;\n  margin-bottom: 15px;\n  margin-top: 25px;\n  font-size: 1.7em;\n  background: -webkit-linear-gradient(to bottom, #434343, #000000);\n  background: linear-gradient(to bottom, #434343, #000000);\n  box-shadow: 0px 10px 12px -7px rgba(255, 255, 255, 0.75);\n  -webkit-box-shadow: 0px 10px 12px -7px rgba(255, 255, 255, 0.75);\n  -moz-box-shadow: 0px 10px 12px -7px rgba(255, 255, 255, 0.75);\n`;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { selectorLoading } from 'redux/contacts/selectors';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { TostBox } from 'components/Toast/Toast';\nimport { Container, Subtitle, Title } from 'components/App.styled';\n\nconst Contacts = () => {\n  const spiner = useSelector(selectorLoading);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Subtitle>Contacts</Subtitle>\n      <Filter />\n      {spiner && <Loader />}\n      <ContactList />\n      <TostBox />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Input","styled","Form","Button","selectorContacts","state","contactsStore","contacts","selectorFilter","filter","selectorLoading","isLoading","selectShowContacts","createSelector","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","onSubmit","preventDefault","newContact","some","contact","toast","addNewContact","unwrap","then","catch","err","addsNewContact","id","nanoid","type","placeholder","onChange","pattern","required","Contact","ContactText","ButtonDel","ContactList","filteredContacts","useEffect","fetchContacts","map","onClick","deleteContact","Filter","currentTarget","filterContacts","StyledLoader","Loader","strokeColor","strokeWidth","animationDuration","width","visible","Container","Title","Subtitle","spiner"],"sourceRoot":""}